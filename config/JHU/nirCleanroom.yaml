geometry:

  # Affine/Projective transforms have awful residual structures, > 30 pix
  # So switch to more opaque polynomial pairs.
  #
  transformClass: skimage.transform.PolynomialTransform
  transformCoeffs:
    - [[-2.516778e+02,  7.718500e-02,  9.469373e-03, -5.195597e-08, -3.242944e-07, 
        -7.071177e-08,  5.845510e-13, -6.128091e-14,  4.269123e-12, -1.762587e-12],
       [-4.951329e+02,  1.737815e-03,  1.982862e-01, -2.971112e-08, -1.024707e-07,
        -6.760543e-07,  9.492056e-14,  1.495697e-12,  2.702189e-13,  9.434072e-12]]
    - [[ 3.012220e+03,  1.310749e+01, -5.790625e-01,  1.266822e-04,  2.869683e-04,
         1.774540e-05, -2.105907e-08,  8.834022e-10, -1.825406e-08,  4.023102e-09],
       [ 2.501707e+03, -9.914763e-02,  5.124509e+00,  2.534871e-05,  3.666719e-05,
         9.016113e-05, -1.270653e-09, -8.324067e-09, -2.645151e-10, -7.259574e-09]]
# Aim for 7k ADU in 3-reads
leds:
  wave: [1300, 1200, 1085, 1070, 1050, 970, 930]
  dutyCycle: [15.0, 5.0, 30, 33, 15, 15, 13]
  focusOffset: [4.0, 0, 0, 0, 0, 0, -10.0]
  position: [112, 432, 1396, 1639, 1822, 3250, 3996]

#
mono:
  use: [True, True, True, True, False, True]
  wave: [1260, 1180, 1100, 1020, 950, 940]
  dutyCycle: [100, 100, 100, 100, 100, 100]
  positionMM: [-29.450, -14.135, 0.721, 15.290, 27.900, 29.700]

# Per detector tweaks to positions, with a dictionary of (wave, rows) -> (xoff, yoff)
# But we have to save the keys as strings. Python encodes tuples with spaces
# after the commas: make sure we match that here. Both wave and row should be ints.
#
nudges:
  n3:
    (1260, 3900): [78, 3900]
    (1260, 3283): [86, 3274]
    (1260, 2666): [95, 2666]
    (1260, 1433): [74, 1433]
    (1260, 816): [75, 816]
    (1260, 200): [81, 200]
    (1180, 2666): [1110, 2674]
    (1180, 2050): [1110, 2045]
    (1180, 816): [1105, 820]
    (1100, 3900): [2094, 3900]
    (1100, 3283): [2097, 3287]
    (1100, 1433): [2095, 1430]
    (1100, 816): [2090, 816]
    (1020, 3900): [3070, 3900]
    (1020, 3283): [3077, 3283]
    (1020, 2666): [3073, 2666]
    (1020, 1433): [3060, 1439]
    (1020, 816): [3070, 816]
    (1020, 200): [3060, 193]
    (940, 3900): [4023, 3900]
    (940, 2050): [4026, 2033]
    (940, 1433): [4025, 1430]
    (940, 816): [4014, 813]
    (940, 200): [4032, 195]
