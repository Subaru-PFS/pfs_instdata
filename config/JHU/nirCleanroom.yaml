geometry:

  # Affine/Projective transforms have awful residual structures, > 30 pix
  # So switch to more opaque polynomial pairs.
  #
  transformClass: skimage.transform.PolynomialTransform
  transformCoeffs:
    - [[-1.12382812e+02,  7.73804226e-02,  9.63815928e-03,
        -7.69273584e-08, -3.27620924e-07, -1.13500630e-07,
         9.22104227e-13,  1.13586200e-15,  4.23071518e-12,
        -7.09826956e-13],
       [-4.84536230e+02,  1.26276819e-03,  1.97580095e-01,
        -1.83492442e-08, -7.61105155e-08, -6.58833310e-07,
        -1.35457873e-14,  1.36539946e-12,  3.75682902e-14,
         9.10784922e-12]]
    - [[ 1.19858113e+03,  1.30221047e+01, -6.22124931e-01,
         2.04344888e-04,  2.95361385e-04,  3.38246449e-05,
        -3.36996831e-08, -1.00471597e-09, -1.77817649e-08,
         1.81330710e-09],
       [ 2.47428080e+03, -7.87883846e-02,  5.13104147e+00,
         1.52035985e-05,  3.04400330e-05,  8.94996906e-05,
         2.18591174e-10, -7.65420311e-09, -9.76447286e-11,
        -7.04827243e-09]]
# Aim for 7k ADU in 3-reads
leds:
  wave: [1300, 1200, 1085, 1070, 1050, 970, 930]
  dutyCycle: [15.0, 5.0, 30, 33, 5, 15, 13]
  focusOffset: [4.0, 0, 0, 0, 0, 0, -10.0]
  position: [112, 432, 1396, 1639, 1822, 3250, 3996]

#
mono:
  use: [True, True, True, True, False, True]
  wave: [1260, 1180, 1100, 1020, 950, 940]
  dutyCycle: [100, 100, 100, 100, 100, 100]
  positionMM: [-29.450, -14.135, 0.721, 15.290, 27.900, 29.700]

# Per detector tweaks to positions, with a dictionary of (wave, rows) -> (xoff, yoff)
# But we have to save the keys as strings. Python encodes tuples with spaces
# after the commas: make sure we match that here. Both wave and row should be ints.
#
nudges:
  n3: {}
  nx3:
    (1260, 3900): [3, 2]
    (1260, 3283): [8, 0]
    (1260, 2666): [5, 0]
    (1260, 1433): [-5, 0]
    (1260, 816): [-5, -3]
    (1260, 200): [-1, -2]
    (1180, 2666): [0, 5]
    (1180, 2050): [3, 0]
    (1180, 816): [0, 4]
    (1100, 3900): [-3, -3]
    (1100, 3283): [0, 3]
    (1100, 1433): [2, -3]
    (1100, 816): [-3, 0]
    (1020, 3283): [4, 3]
    (1020, 1433): [-3, 3]
    (1020, 200): [0, -4]
    (940, 3900): [-2, 2]
    (940, 2050): [3, 0]
    (940, 1125): [2, -2]
    (940, 816): [-3, -3]
    (940, 200): [4, -10]
