geometry:

  # Affine/Projective transforms have awful residual structures, > 30 pix
  # So switch to more opaque polynomial pairs.
  #
  transformClass: skimage.transform.PolynomialTransform
  transformCoeffs:
    - [[-2.48715929e+02,  7.76025755e-02,  1.02349997e-02,
        -7.87240701e-08, -3.33020407e-07, -1.18181451e-07,
         8.97493122e-13, -2.94354226e-15,  4.42045805e-12,
        -8.45094153e-13],
       [-4.91175445e+02,  1.51154524e-03,  1.98484880e-01,
        -2.11641906e-08, -9.23181224e-08, -7.01693153e-07,
        -5.36540122e-15,  1.47775609e-12,  1.59623835e-13,
         9.92997963e-12]]
    - [[ 2.94210089e+03,  1.30505238e+01, -6.13812990e-01,
         1.91223701e-04,  2.94005616e-04,  3.09783811e-05,
        -3.22695030e-08, -2.82707420e-11, -1.86243482e-08,
         2.35363567e-09],
       [ 2.48142188e+03, -8.63645180e-02,  5.12083066e+00,
         1.72771262e-05,  3.32707634e-05,  9.34934863e-05,
         1.02168182e-10, -8.20574482e-09, -1.55777786e-10,
        -7.61205379e-09]]
# Aim for 7k ADU in 3-reads
leds:
  wave: [1300, 1200, 1085, 1070, 1050, 970, 930]
  dutyCycle: [15.0, 5.0, 30, 33, 5, 15, 13]
  focusOffset: [4.0, 0, 0, 0, 0, 0, -10.0]
  position: [112, 432, 1396, 1639, 1822, 3250, 3996]

#
mono:
  use: [True, True, True, True, False, True]
  wave: [1260, 1180, 1100, 1020, 950, 940]
  dutyCycle: [100, 100, 100, 100, 100, 100]
  positionMM: [-29.450, -14.135, 0.721, 15.290, 27.900, 29.700]

# Per detector tweaks to positions, with a dictionary of (wave, rows) -> (xoff, yoff)
# But we have to save the keys as strings. Python encodes tuples with spaces
# after the commas: make sure we match that here. Both wave and row should be ints.
#
nudges:
  n3: {}
  nx3:
    (1260, 3900): [3, 2]
    (1260, 3283): [8, 0]
    (1260, 2666): [5, 0]
    (1260, 1433): [-5, 0]
    (1260, 816): [-5, -3]
    (1260, 200): [-1, -2]
    (1180, 2666): [0, 5]
    (1180, 2050): [3, 0]
    (1180, 816): [0, 4]
    (1100, 3900): [-3, -3]
    (1100, 3283): [0, 3]
    (1100, 1433): [2, -3]
    (1100, 816): [-3, 0]
    (1020, 3283): [4, 3]
    (1020, 1433): [-3, 3]
    (1020, 200): [0, -4]
    (940, 3900): [-2, 2]
    (940, 2050): [3, 0]
    (940, 1125): [2, -2]
    (940, 816): [-3, -3]
    (940, 200): [4, -10]
