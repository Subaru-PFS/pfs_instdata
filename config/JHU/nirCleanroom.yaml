geometry:

  # Affine/Projective transforms have awful residual structures, > 30 pix
  # So switch to more opaque polynomial pairs.
  #
  transformClass: skimage.transform.ProjectiveTransform
  transformCoeffs:
    - [[ 7.28221767e-03,  1.96742380e-04, -3.36870215e+02],
       [ 1.28388579e-05,  7.08578809e-03, -5.67919079e+02],
       [ 4.12862303e-10,  9.95802613e-08,  9.62844698e-01]]
# Aim for 7k ADU in 3-reads
leds:
  wave: [1300, 1200, 1085, 1070, 1050, 970, 930]
  dutyCycle: [15.0, 5.0, 30, 33, 15, 15, 13]
  focusOffset: [4.0, 0, 0, 0, 0, 0, -10.0]
  position: [112, 432, 1396, 1639, 1822, 3250, 3996]

#
mono:
  use: [True, True, True, True, False, True]
  wave: [1260, 1180, 1100, 1020, 950, 940]
  dutyCycle: [100, 100, 100, 100, 100, 100]
  positionMM: [-29.450, -14.135, 0.721, 15.290, 27.900, 29.700]

# Per detector tweaks to positions, with a dictionary of (wave, rows) -> (xoff, yoff)
# But we have to save the keys as strings. Python encodes tuples with spaces
# after the commas: make sure we match that here. Both wave and row should be ints.
#
nudges:
  n3:
    (1260, 3900): [78, 3900]
    (1260, 3283): [86, 3274]
    (1260, 2666): [95, 2666]
    (1260, 1433): [74, 1433]
    (1260, 816): [75, 816]
    (1260, 200): [81, 200]
    (1180, 2666): [1110, 2674]
    (1180, 2050): [1110, 2045]
    (1180, 816): [1105, 820]
    (1100, 3900): [2094, 3900]
    (1100, 3283): [2097, 3287]
    (1100, 1433): [2095, 1430]
    (1100, 816): [2090, 816]
    (1020, 3900): [3070, 3900]
    (1020, 3283): [3077, 3283]
    (1020, 2666): [3073, 2666]
    (1020, 1433): [3060, 1439]
    (1020, 816): [3070, 816]
    (1020, 200): [3060, 193]
    (940, 3900): [4023, 3900]
    (940, 2050): [4026, 2033]
    (940, 1433): [4025, 1430]
    (940, 816): [4014, 813]
    (940, 200): [4032, 195]
